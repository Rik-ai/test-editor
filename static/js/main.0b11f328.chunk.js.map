{"version":3,"sources":["Components/Navigation/Drawer/Drawer.module.css","Components/Navigation/Menu Toggle/MenuToggle.module.css","Components/Ui/Loader/Loader.module.css","Containers/Auth/Auth.module.css","Components/Ui/Button/Button.module.css","Components/Ui/Input/Input.module.css","Containers/Quiz/Quiz.module.css","Components/AtiveQuiz/ActiveQuiz.module.css","Components/AtiveQuiz/AnswersList/AnswerItem/AnswerItem.module.css","Components/FinishedQuiz/FinishedQuiz.module.css","hoc/Layout/Layout.module.css","Components/Ui/Backdrop/Backdrop.module.css","Containers/QuizList/QuizList.module.css","Containers/QuizCreator/QuizCreator.module.css","Components/Ui/Select/Select.module.css","Components/AtiveQuiz/AnswersList/AnswersList.module.css","Components/Navigation/Menu Toggle/MenuToggle.js","Components/Ui/Backdrop/Backdrop.js","Components/Navigation/Drawer/Drawer.js","hoc/Layout/Layout.js","Components/Ui/Loader/Loader.js","axios/axios-quiz.js","store/actions/quiz.js","store/actions/actionTypes.js","Containers/QuizList/QuizList.js","Components/Ui/Button/Button.js","Components/Ui/Input/Input.js","store/actions/auth.js","Containers/Auth/Auth.js","Components/Ui/Select/Select.js","Form/FormFramework.js","hoc/Auxiliary/Auxiliary.js","Containers/QuizCreator/QuizCreator.js","store/actions/create.js","Components/AtiveQuiz/AnswersList/AnswerItem/AnswerItem.js","Components/AtiveQuiz/AnswersList/AnswersList.js","Components/AtiveQuiz/ActiveQuiz.js","Components/FinishedQuiz/FinishedQuiz.js","Containers/Quiz/Quiz.js","Components/Logout/Logout.js","App.js","serviceWorker.js","store/reducers/quiz.js","store/reducers/create.js","store/reducers/auth.js","store/reducers/rootReducer.js","index.js"],"names":["module","exports","MenuToggle","props","cls","classes","isOpen","push","open","className","join","onClick","onToggle","Backdrop","Drawer","clickHandler","onClose","links","map","link","index","key","to","exact","activeClassName","active","label","this","close","console","log","isAuthenticated","Fragment","renderLinks","Component","Layout","state","menu","toggleMenuHandler","setState","menuCloseHandler","children","connect","auth","token","Loader","center","axios","create","baseURL","fetchQuizSucces","quiz","type","fetchQuizesSucces","quizes","fetchQuizesError","e","error","quizSetState","answerState","results","QuizList","id","name","fetchQuizes","loading","length","renderQuizes","dispatch","a","get","response","Object","keys","data","forEach","Button","disabled","isInvalid","valid","touched","shouldValidate","Input","inputType","htmlFor","Math","random","invalid","value","onChange","errorMassage","autoLogout","time","setTimeout","logout","localStorage","removeItem","authSucces","Auth","isFormVAlid","formControls","email","errorMessage","validation","required","password","minLength","loginHandler","registerHandler","submitHandler","preventDefault","onChangeHandler","controlName","control","target","validateControl","isValid","trim","test","String","toLowerCase","onSubmit","AuthForm","renderInputs","isLogin","authData","returnSecureToken","url","post","expirationDate","Date","getTime","expiresIn","setItem","idToken","localId","Select","options","option","text","createControl","config","validate","validateForm","isFormValid","hasOwnProperty","Auxiliary","createOptionControl","number","createFormControls","question","option1","option2","option3","option4","QuizCreator","siFormValid","rightAnswerId","addQuestionHandler","event","questionItem","answers","createQuizQuestion","createQuizHandler","finishCreateQuiz","changeHandler","selectChangeHandler","select","renderControls","item","getState","AnswerItem","onAnswerClick","answer","AnswersList","ActiveQuiz","Question","answerNumber","quizLength","FinishedQuiz","successCount","reduce","total","quizItem","onRetry","Quiz","fetchQuizById","match","params","retryQuiz","QuizWrapper","isFinished","activeQuestion","quizAnswerClick","quizId","answerId","timeout","window","isQuizFinished","clearTimeout","Logout","App","autoLogin","routes","path","component","withRouter","getItem","Boolean","location","hostname","initialState","combineReducers","action","erros","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.0b11f328.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Drawer\":\"Drawer_Drawer___UE0S\",\"close\":\"Drawer_close__2mRZB\",\"active\":\"Drawer_active__Hf0xH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MenuToggle\":\"MenuToggle_MenuToggle__2NH-x\",\"open\":\"MenuToggle_open__2ateh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader_Loader__3d3Wp\",\"lds-ellipsis1\":\"Loader_lds-ellipsis1__2R-Yr\",\"lds-ellipsis2\":\"Loader_lds-ellipsis2__2r9gz\",\"lds-ellipsis3\":\"Loader_lds-ellipsis3__3e1vW\",\"center\":\"Loader_center__1YLUb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__34800\",\"AuthForm\":\"Auth_AuthForm__3NwNI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__FjPD5\",\"error\":\"Button_error__1ia7u\",\"succes\":\"Button_succes__3ufYe\",\"primary\":\"Button_primary__Pf65k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__N_xC_\",\"invalid\":\"Input_invalid__StRdb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Quiz\":\"Quiz_Quiz__17VGf\",\"QuizWrapper\":\"Quiz_QuizWrapper__cvilm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ActiveQuiz\":\"ActiveQuiz_ActiveQuiz__r3G3W\",\"Question\":\"ActiveQuiz_Question__1H1O0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswerItem\":\"AnswerItem_AnswerItem__2R6W7\",\"success\":\"AnswerItem_success__MDb92\",\"error\":\"AnswerItem_error__3Wsgo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FinishedQuiz\":\"FinishedQuiz_FinishedQuiz__2jfjf\",\"success\":\"FinishedQuiz_success__2X-yG\",\"error\":\"FinishedQuiz_error__1Zgd1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__2BpO9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__16pH8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizList\":\"QuizList_QuizList__21UOW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizCreator\":\"QuizCreator_QuizCreator__3QP2l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Select\":\"Select_Select__ygNOF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswersList\":\"AnswersList_AnswersList__16Yfr\"};","import React from 'react'\nimport classes from './MenuToggle.module.css'\n\n\nconst MenuToggle = props => {\n    const cls = [\n        classes.MenuToggle,\n        'fa'\n    ]\n\n    if (props.isOpen) {\n        cls.push('fa-times')\n        cls.push(classes.open)\n    } else {\n        cls.push('fa-bars')\n    }\n\n    return (\n        <i className={cls.join(' ')}\n            onClick={props.onToggle}\n        />\n    )\n}\n\nexport default MenuToggle","import React from 'react'\nimport classes from './Backdrop.module.css'\n\nconst Backdrop = props => <div className={classes.Backdrop} onClick={props.onClick} />\n\nexport default Backdrop","import React, { Component } from 'react'\nimport classes from './Drawer.module.css'\nimport { NavLink } from 'react-router-dom'\nimport Backdrop from '../..//Ui/Backdrop/Backdrop'\n\nclass Drawer extends Component {\n\n    clickHandler = () => {\n        this.props.onClose()\n    }\n\n    renderLinks(links) {\n        return links.map((link, index) => {\n            return (\n                <li key={index}>\n                    <NavLink to={link.to} exact={link.exact} activeClassName={classes.active} onClick={this.clickHandler}>\n                        {link.label}\n                    </NavLink>\n                </li >\n            )\n        })\n    }\n\n\n    render() {\n        const cls = [classes.Drawer]\n\n        if (!this.props.isOpen) {\n            cls.push(classes.close)\n        }\n\n        const links = [\n            { to: '/', label: 'Список', exact: true },\n        ]\n\n        console.log('Auth', this.props.isAuthenticated)\n\n        if (this.props.isAuthenticated) {\n            links.push({ to: '/quiz-creator', label: 'Создать тест', exact: false })\n            links.push({ to: '/logout', label: 'Выйти', exact: false })\n        } else {\n            links.push({ to: '/auth', label: 'Авторизация', exact: false })\n        }\n\n\n        return (\n            <React.Fragment>\n                <nav className={cls.join(' ')}>\n                    <ul>\n                        {this.renderLinks(links)}\n                    </ul>\n                </nav>\n                {this.props.isOpen ? <Backdrop onClick={this.props.onClose} /> : null}\n            </React.Fragment>\n        )\n    }\n}\n\n\nexport default Drawer","import React, { Component } from 'react'\nimport classes from './Layout.module.css'\nimport MenuToggle from '../../Components/Navigation/Menu Toggle/MenuToggle'\nimport Drawer from '../../Components/Navigation/Drawer/Drawer'\nimport { connect } from 'react-redux'\n\n\n\nclass Layout extends Component {\n\n    state = {\n        menu: false\n    }\n\n\n    toggleMenuHandler = () => {\n        this.setState({\n            menu: !this.state.menu\n        })\n    }\n\n    menuCloseHandler = () => {\n        this.setState({\n            menu: false\n        })\n    }\n\n    render() {\n        return (\n            <div className={classes.Layout}>\n\n                <Drawer\n                    isOpen={this.state.menu}\n                    onClose={this.menuCloseHandler}\n                    isAuthenticated={this.props.isAuthenticated}\n                />\n\n                <MenuToggle\n                    onToggle={this.toggleMenuHandler}\n                    isOpen={this.state.menu}\n                />\n\n                <main>\n                    {this.props.children}\n\n                </main>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        isAuthenticated: !!state.auth.token\n    }\n}\n\nexport default connect(mapStateToProps)(Layout)","import React from 'react'\nimport classes from './Loader.module.css'\n\nconst Loader = props => (\n    <div className={classes.center}>\n        <div className={classes.Loader}>\n            <div />\n            <div />\n            <div />\n            <div />\n        </div>\n    </div>\n)\n\n\nexport default Loader","import axios from 'axios'\n\nexport default axios.create({\n    baseURL: 'https://react-quiz-478bf.firebaseio.com/'\n})","import axios from '../../axios/axios-quiz'\nimport {\n    FETCH_QUIZES_START,\n    FETCH_QUIZES_SUCCES,\n    FETCH_QUIZES_ERROR,\n    FETCH_QUIZ_SUCCES,\n    QUIZ_SET_STATE,\n    FINISH_QUIZ,\n    QUIZ_NEXT_QUESTION,\n    QUIZ_RETRY\n} from './actionTypes'\n\n\nexport function fetchQuizes() {\n    return async dispatch => {\n        dispatch(fetchQuizesStart())\n        try {\n            const response = await axios.get('/quizes.json')\n\n            const quizes = []\n\n            Object.keys(response.data).forEach((key, index) => {\n\n                quizes.push({\n                    id: key,\n                    name: `Тест №${index + 1}`\n                })\n            })\n            dispatch(fetchQuizesSucces(quizes))\n        } catch (e) {\n            dispatch(fetchQuizesError(e))\n        }\n    }\n}\nexport function fetchQuizById(quizId) {\n    return async dispatch => {\n        dispatch(fetchQuizesStart())\n\n        try {\n            const response = await axios.get(`/quizes/${quizId}.json`)\n            const quiz = response.data\n\n            dispatch(fetchQuizSucces(quiz))\n        } catch (e) {\n            dispatch(fetchQuizesError(e))\n        }\n    }\n}\nexport function fetchQuizSucces(quiz) {\n    return {\n        type: FETCH_QUIZ_SUCCES,\n        quiz\n    }\n}\nexport function fetchQuizesStart() {\n    return {\n        type: FETCH_QUIZES_START\n    }\n}\nexport function fetchQuizesSucces(quizes) {\n    return {\n        type: FETCH_QUIZES_SUCCES,\n        quizes\n    }\n}\nexport function fetchQuizesError(e) {\n    return {\n        type: FETCH_QUIZES_ERROR,\n        error: e\n\n    }\n}\nexport function quizSetState(answerState, results) {\n    return {\n        type: QUIZ_SET_STATE,\n        answerState, results\n    }\n}\nexport function finishQuiz() {\n    return {\n        type: FINISH_QUIZ\n    }\n}\nexport function quizNextQuestion(number) {\n    return {\n        type: QUIZ_NEXT_QUESTION,\n        number\n    }\n}\nexport function retryQuiz() {\n    return {\n        type: QUIZ_RETRY\n    }\n}\n\nexport function quizAnswerClick(answerId) {\n    return (dispatch, getState) => {\n        const state = getState().quiz\n\n\n        if (state.answerState) {\n            const key = Object.keys(state.answerState)[0]\n            if (state.answerState[key] === 'success') {\n                return\n            }\n\n        }\n        const question = state.quiz[state.activeQuestion]\n        const results = state.results\n\n        if (question.rightAnswerId === answerId) {\n            if (!results[question.id]) {\n                results[question.id] = 'success'\n            }\n\n            dispatch(quizSetState({ [answerId]: 'success' }, results))\n\n\n            const timeout = window.setTimeout(() => {\n                if (isQuizFinished(state)) {\n                    dispatch(finishQuiz())\n                } else {\n                    dispatch(quizNextQuestion(state.activeQuestion + 1))\n                }\n                window.clearTimeout(timeout)\n            }, 1000)\n\n\n        } else {\n            results[question.id] = 'error'\n            dispatch(quizSetState({ [answerId]: 'error' }, results))\n        }\n    }\n}\n\nfunction isQuizFinished(state) {\n    return state.activeQuestion + 1 === state.quiz.length\n}","export const FETCH_QUIZES_START = 'FETCH_QUIZES_START'\nexport const FETCH_QUIZES_SUCCES = 'FETCH_QUIZES_SUCCES'\nexport const FETCH_QUIZES_ERROR = 'FETCH_QUIZES_ERROR'\nexport const FETCH_QUIZ_SUCCES = 'FETCH_QUIZ_SUCCES'\nexport const QUIZ_SET_STATE = 'QUIZ_SET_STATE'\nexport const FINISH_QUIZ = 'FINISH_QUIZ'\nexport const QUIZ_NEXT_QUESTION = 'QUIZ_NEXT_QUESTION'\nexport const QUIZ_RETRY = 'QUIZ_RETRY'\nexport const CREATE_QUIZ_QUESTION = 'CREATE_QUIZ_QUESTION'\nexport const RESET_QUIZ_CREATION = 'RESET_QUIZ_CREATION'\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS'\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT'","import React, { Component } from 'react'\nimport classes from './QuizList.module.css'\nimport { NavLink } from 'react-router-dom'\nimport Loader from '../../Components/Ui/Loader/Loader'\nimport { fetchQuizes } from '../../store/actions/quiz'\nimport { connect } from 'react-redux'\n\nclass QuizList extends Component {\n\n\n    renderQuizes() {\n        return this.props.quizes.map(quiz => {\n            return (\n                <li\n                    key={quiz.id}\n                >\n                    <NavLink to={'/quiz/' + quiz.id}>\n                        {quiz.name}\n                    </NavLink>\n                </li>\n            )\n        })\n    }\n    //нужен для обращения к бэкенду (серверу)\n    componentDidMount() {\n        this.props.fetchQuizes()\n    }\n\n    render() {\n        return (\n            <div className={classes.QuizList}>\n                <div>\n                    <h1>Список тестов</h1>\n\n                    {\n                        this.props.loading && this.props.quizes.length !== 0\n                            ? <Loader />\n                            : <ul>\n                                {this.renderQuizes()}\n                            </ul>\n                    }\n\n                </div>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        quizes: state.quiz.quizes,\n        loading: state.quiz.loading\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        fetchQuizes: () => dispatch(fetchQuizes())\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizList)","import React from 'react'\nimport classes from './Button.module.css'\n\nconst Button = props => {\n    const cls = [\n        classes.Button,\n        classes[props.type]\n    ]\n    return (\n        <button\n            onClick={props.onClick}\n            className={cls.join(' ')}\n            disabled={props.disabled}>\n            {props.children}\n        </button>\n    )\n}\n\n\n\n\nexport default Button","import React from 'react'\nimport classes from './Input.module.css'\n\nfunction isInvalid({ valid, touched, shouldValidate }) {\n    return !valid && shouldValidate && touched\n}\n\nconst Input = props => {\n    const inputType = props.type || 'text'\n    const cls = [classes.Input]\n    const htmlFor = `${inputType}-${Math.random()}`\n\n    if (isInvalid(props)) {\n        cls.push(classes.invalid)\n    }\n\n    return (\n        <div className={cls.join(' ')}>\n            <label htmlFor={htmlFor}>{props.label}</label>\n            <input\n                type={inputType}\n                id={htmlFor}\n                value={props.value}\n                onChange={props.onChange}\n            />\n\n            {\n                isInvalid(props)\n                    ? <span>{props.errorMassage || 'Введите верное значение'}</span>\n                    : null\n            }\n\n        </div>\n    )\n}\n\nexport default Input","import axios from 'axios'\nimport { AUTH_SUCCESS, AUTH_LOGOUT } from './actionTypes'\n\nexport function auth(email, password, isLogin) {\n    return async dispatch => {\n        const authData = {\n            email, password,\n            returnSecureToken: true\n        }\n\n        let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDQi5M9jQFwrKz7_nK8JpRuwfB2QMSekkg'\n\n        if (isLogin) {\n            url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyDQi5M9jQFwrKz7_nK8JpRuwfB2QMSekkg'\n        }\n\n        const response = await axios.post(url, authData)\n        const data = response.data\n\n        const expirationDate = new Date(new Date().getTime() + data.expiresIn * 1000)\n\n        localStorage.setItem('token', data.idToken)\n        localStorage.setItem('userId', data.localId)\n        localStorage.setItem('expirationDate', expirationDate)\n\n\n        dispatch(authSucces(data.idToken))\n        dispatch(autoLogout(data.expiresIn))\n\n    }\n}\n\nexport function autoLogout(time) {\n    return dispatch => {\n        setTimeout(() => {\n            dispatch(logout())\n        }, time * 1000)\n    }\n}\n\nexport function logout() {\n    localStorage.removeItem('token')\n    localStorage.removeItem('userId')\n    localStorage.removeItem('expirationDate')\n    return {\n        type: AUTH_LOGOUT\n    }\n}\n\nexport function autoLogin() {\n    return dispatch => {\n        const token = localStorage.getItem('token')\n        if (!token) {\n            dispatch(logout())\n        } else {\n            const expirationDate = new Date(localStorage.getItem('expirationDate'))\n            if (expirationDate <= new Date()) {\n                dispatch(logout())\n            } else {\n                dispatch(authSucces(token))\n                dispatch(autoLogout((expirationDate.getTime() - new Date().getTime()) / 1000))\n            }\n        }\n    }\n}\n\n\nexport function authSucces(token) {\n    return {\n        type: AUTH_SUCCESS,\n        token\n    }\n}","import React, { Component } from 'react'\nimport classes from './Auth.module.css'\nimport Button from '../../Components/Ui/Button/Button'\nimport Input from '../../Components/Ui/Input/Input'\nimport { connect } from 'react-redux'\nimport { auth } from '../../store/actions/auth'\n\n\nfunction validateEmail(email) {\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n}\n\n\n\nclass Auth extends Component {\n\n    // Валидация\n    state = {\n        isFormVAlid: false,\n        formControls: {\n            email: {\n                value: '',\n                type: 'email',\n                label: 'Email',\n                errorMessage: 'Введи нормальный email ска',\n                valid: false,\n                touched: false,\n                validation: {\n                    required: true,\n                    email: true\n                }\n            },\n            password: {\n                value: '',\n                type: 'password',\n                label: 'Пароль',\n                errorMessage: 'Введи нормальный пароль ска',\n                valid: false,\n                touched: false,\n                validation: {\n                    required: true,\n                    minLength: 6\n                }\n            }\n        }\n    }\n\n\n    loginHandler = () => {\n        this.props.auth(\n            this.state.formControls.email.value,\n            this.state.formControls.password.value,\n            true\n        )\n    }\n\n    registerHandler = () => {\n        this.props.auth(\n            this.state.formControls.email.value,\n            this.state.formControls.password.value,\n            false\n        )\n\n    }\n\n    submitHandler = e => {\n        e.preventDefault()\n    }\n\n    validateControl(value, validation) {\n        if (!validation) {\n            return true\n        }\n\n        let isValid = true\n\n        if (validation.required) {\n            isValid = value.trim() !== '' && isValid\n        }\n        if (validation.email) {\n            isValid = validateEmail(value) && isValid\n        }\n        if (validation.minLength) {\n            isValid = value.length >= validation.minLength && isValid\n        }\n\n        return isValid\n    }\n\n    onChangeHandler = (e, controlName) => {\n\n        const formControls = { ...this.state.formControls }\n        const control = { ...formControls[controlName] }\n\n        control.value = e.target.value\n        control.touched = true\n        control.valid = this.validateControl(control.value, control.validation)\n\n        formControls[controlName] = control\n\n        let isFormVAlid = true\n\n        Object.keys(formControls).forEach(name => {\n            isFormVAlid = formControls[name].valid && isFormVAlid\n        })\n\n        this.setState({\n            formControls, isFormVAlid\n        })\n    }\n\n    renderInputs() {\n        return Object.keys(this.state.formControls).map((controlName, index) => {\n            const control = this.state.formControls[controlName]\n            return (\n                <Input\n                    key={controlName + index}\n                    type={control.type}\n                    value={control.value}\n                    valid={control.valid}\n                    touched={control.touched}\n                    label={control.label}\n                    shouldValidate={!!control.validation}\n                    errorMessage={control.errorMessage}\n                    onChange={e => this.onChangeHandler(e, controlName)}\n                />\n            )\n        })\n    }\n\n    render() {\n        return (\n            <div className={classes.Auth}>\n                <div>\n                    <h1>Авторизация</h1>\n\n                    <form onSubmit={this.submitHandler} className={classes.AuthForm}>\n\n                        {this.renderInputs()}\n\n                        <Button\n\n                            type='succes'\n                            onClick={this.loginHandler}\n                            disabled={!this.state.isFormVAlid}\n                        >\n                            Войти\n                        </Button>\n                        <Button\n                            type='primary'\n                            onClick={this.registerHandler}\n                            disabled={!this.state.isFormVAlid}\n\n                        >\n                            Зарегистрироваться\n                        </Button>\n                    </form>\n                </div>\n\n            </div>\n        )\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        auth: (email, password, isLogin) => dispatch(auth(email, password, isLogin))\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(Auth)","import React from 'react'\nimport classes from './Select.module.css'\n\n\nconst Select = props => {\n    const htmlFor = `${props.label}-${Math.random()}`\n\n\n    return (\n        <div className={classes.Select}>\n            <label htmlFor={htmlFor}>{props.label}</label>\n            <select\n                id={htmlFor}\n                value={props.value}\n                onChange={props.onChange}\n            >\n                {props.options.map((option, index) => {\n                    return (\n                        <option\n                            value={option.value}\n                            key={option.value + index}\n                        >\n                            {option.text}\n                        </option>\n                    )\n                })}\n            </select>\n        </div>\n    )\n}\n\n\nexport default Select","export function createControl(config, validation) {\n    return {\n        ...config,\n        validation,\n        valid: !validation,\n        touched: false,\n        value: ''\n    }\n}\n\nexport function validate(value, validation = null) {\n    if (!validation) {\n        return true\n    }\n    let isValid = true\n\n    if (validation.required) {\n        isValid = value.trim() !== '' && isValid\n    }\n\n    return isValid\n}\n\nexport function validateForm(formControls) {\n    let isFormValid = true\n\n    for (let control in formControls) {\n        if (formControls.hasOwnProperty(control)) { // проверяем если контрол находится в корне обьекта форм контролс\n            isFormValid = formControls[control].valid && isFormValid\n        }\n    }\n\n\n    return isFormValid\n\n}","const Auxiliary = props => props.children\n\nexport default Auxiliary","import React, { Component } from 'react'\nimport classes from './QuizCreator.module.css'\nimport Button from '../../Components/Ui/Button/Button'\nimport Input from '../../Components/Ui/Input/Input'\nimport Select from '../../Components/Ui/Select/Select'\nimport { createControl, validate, validateForm } from '../../Form/FormFramework'\nimport Auxiliary from '../../hoc/Auxiliary/Auxiliary'\nimport { connect } from 'react-redux'\nimport { createQuizQuestion, finishCreateQuiz } from '../../store/actions/create'\n\n\nfunction createOptionControl(number) {\n    return createControl({\n        label: `Вариант ${number}`,\n        errorMessage: 'Поле не может быть пустым',\n        id: number\n    }, { required: true })\n}\n\nfunction createFormControls() {\n    return {\n        question: createControl({\n            label: 'Введите вопрос',\n            errorMessage: 'Вопрос не может быть пустым'\n        }, { required: true }),\n        option1: createOptionControl(1),\n        option2: createOptionControl(2),\n        option3: createOptionControl(3),\n        option4: createOptionControl(4)\n    }\n}\n\n\nclass QuizCreator extends Component {\n\n    state = {\n        siFormValid: false,\n        rightAnswerId: 1,\n        formControls: createFormControls()\n    }\n\n\n    submitHandler = e => {\n        e.preventDefault()\n    }\n\n    addQuestionHandler = event => {\n        event.preventDefault()\n\n        const { question, option1, option2, option3, option4 } = this.state.formControls\n\n        const questionItem = {\n            question: question.value,\n            id: this.props.quiz.length + 1,\n            rightAnswerId: this.state.rightAnswerId,\n            answers: [\n                { text: option1.value, id: option1.id },\n                { text: option2.value, id: option2.id },\n                { text: option3.value, id: option3.id },\n                { text: option4.value, id: option4.id }\n            ]\n        }\n\n        this.props.createQuizQuestion(questionItem)\n\n        this.setState({\n            siFormValid: false,\n            rightAnswerId: 1,\n            formControls: createFormControls()\n        })\n    }\n\n    createQuizHandler = event => {\n        event.preventDefault()\n        //обнуляем стейт\n        this.setState({\n            siFormValid: false,\n            rightAnswerId: 1,\n            formControls: createFormControls()\n        })\n        this.props.finishCreateQuiz()\n    }\n\n    changeHandler = (value, controlName) => {\n        const formControls = { ...this.state.formControls }\n        const control = { ...formControls[controlName] }\n\n        control.touched = true\n        control.value = value\n        control.valid = validate(control.value, control.validation)\n\n        formControls[controlName] = control\n\n        this.setState({\n            formControls,\n            isFormValid: validateForm(formControls)\n        })\n    }\n\n    renderControls() {\n        return Object.keys(this.state.formControls).map((controlName, index) => {\n            const control = this.state.formControls[controlName]\n\n            return (\n                <Auxiliary key={controlName + index}>\n                    <Input\n                        label={control.label}\n                        value={control.value}\n                        valid={control.valid}\n                        shouldValidate={!!control.validation} //двойное отрицание что бы привести к булеан типу\n                        touched={control.touched}\n                        errorMessage={control.errorMessage}\n                        onChange={event => this.changeHandler(event.target.value, controlName)}\n                    />\n                    {/* добавляет вертикальну черту */}\n                    {index === 0 ? <hr /> : null}\n                </Auxiliary>\n            )\n        })\n    }\n\n    selectChangeHandler = event => {\n        this.setState({\n            rightAnswerId: +event.target.value\n        })\n    }\n\n    render() {\n        const select = <Select\n            label=\"Выберите правильный ответ\"\n            value={this.state.rightAnswerId}\n            onChange={this.selectChangeHandler}\n            options={[\n                { text: 1, value: 1 },\n                { text: 2, value: 2 },\n                { text: 3, value: 3 },\n                { text: 4, value: 4 }\n            ]}\n        />\n\n        return (\n            <div className={classes.QuizCreator}>\n                <div>\n                    <h1>Создание теста</h1>\n\n                    <form onSubmit={this.submitHandler}>\n\n                        {this.renderControls()}\n\n                        {select}\n                        <Button\n                            type='primary'\n                            onClick={this.addQuestionHandler}\n                            disabled={!this.state.isFormValid}\n                        >\n                            Добавить вопрос\n                    </Button>\n                        <Button\n                            type='succes'\n                            onClick={this.createQuizHandler}\n                            disabled={this.props.quiz.length === 0}\n                        >\n                            Создать тест\n                     </Button>\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        quiz: state.create.quiz\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        createQuizQuestion: item => dispatch(createQuizQuestion(item)),\n        finishCreateQuiz: () => dispatch(finishCreateQuiz())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizCreator)","import { CREATE_QUIZ_QUESTION, RESET_QUIZ_CREATION } from \"./actionTypes\"\nimport axios from '../../axios/axios-quiz'\n\nexport function createQuizQuestion(item) {\n    return {\n        type: CREATE_QUIZ_QUESTION,\n        item\n    }\n}\n\nexport function resetQuizCreation() {\n    return {\n        type: RESET_QUIZ_CREATION\n    }\n}\n\nexport function finishCreateQuiz() {\n    return async (dispatch, getState) => {\n        await axios.post('/quizes.json', getState().create.quiz)\n        dispatch(resetQuizCreation())\n    }\n}","import React from 'react'\nimport classes from './AnswerItem.module.css'\n\nconst AnswerItem = props => {\n\n    const cls = [classes.AnswerItem]\n\n    if (props.state) {\n        cls.push(classes[props.state])\n    }\n\n\n    return (\n        <li className={cls.join(' ')}\n            onClick={() => props.onAnswerClick(props.answer.id)}>\n\n            {props.answer.text}\n\n        </li>\n    )\n}\n\nexport default AnswerItem","import React from 'react'\nimport classes from './AnswersList.module.css'\nimport AnswerItem from './AnswerItem/AnswerItem'\n\nconst AnswersList = props => {\n    return (\n        <ul className={classes.AnswersList}>\n            {props.answers.map((answer, index) => {\n                return (\n                    <AnswerItem\n                        key={index}\n                        answer={answer}\n                        onAnswerClick={props.onAnswerClick}\n                        state={props.state ? props.state[answer.id] : null}\n                    />\n                )\n            })}\n        </ul>\n\n    )\n}\nexport default AnswersList","import React from 'react'\nimport classes from './ActiveQuiz.module.css'\nimport AnswersList from './AnswersList/AnswersList'\n\n\nconst ActiveQuiz = props => {\n    return (\n        <div className={classes.ActiveQuiz}>\n            <p className={classes.Question}>\n                <span>\n                    <strong>{props.answerNumber}.</strong>&nbsp; {/*&nbsp  добавляет символ пробела в js */}\n                    {props.question}\n                </span>\n\n                <small>{props.answerNumber} из {props.quizLength}</small>\n            </p>\n\n            <AnswersList\n                state={props.state}\n                answers={props.answers}\n                onAnswerClick={props.onAnswerClick}\n            />\n        </div>\n    )\n}\nexport default ActiveQuiz","import React from 'react'\nimport classes from './FinishedQuiz.module.css'\nimport Button from '../Ui/Button/Button'\nimport { Link } from 'react-router-dom'\n\nconst FinishedQuiz = props => {\n    const successCount = Object.keys(props.results).reduce((total, key) => {\n        if (props.results[key] === 'success') {\n            total++\n        }\n\n        return total\n    }, 0)\n\n\n\n\n    return (\n        <div className={classes.FinishedQuiz}>\n            <ul>\n                {props.quiz.map((quizItem, index) => {\n                    const cls = [\n                        'fa',\n                        props.results[quizItem.id] === 'error' ? 'fa-times' : 'fa-check',\n                        classes[props.results[quizItem.id]]\n                    ]\n\n\n\n                    return (\n                        <li key={index}>\n                            <strong>{index + 1}</strong>.&nbsp;\n                            {quizItem.question}\n                            <i className={cls.join(' ')} />\n\n                        </li>\n                    )\n\n                })}\n\n            </ul>\n\n            <p>Правильно {successCount} из {props.quiz.length}</p>\n\n            <div>\n                <Button onClick={props.onRetry} type=\"primary\">Повтор</Button>\n                <Link to='/'>\n                    <Button type=\"success\">Перейти в список тестов</Button>\n                </Link>\n\n\n            </div>\n        </div>\n    )\n}\n\nexport default FinishedQuiz","import React, { Component } from 'react'\nimport classes from './Quiz.module.css'\nimport ActiveQuiz from '../../Components/AtiveQuiz/ActiveQuiz'\nimport FinishedQuiz from '../../Components/FinishedQuiz/FinishedQuiz'\nimport Loader from '../../Components/Ui/Loader/Loader'\nimport { connect } from 'react-redux'\nimport { fetchQuizById, quizAnswerClick, retryQuiz } from '../../store/actions/quiz'\n\nclass Quiz extends Component {\n\n\n    async componentDidMount() {\n        this.props.fetchQuizById(this.props.match.params.id)\n    }\n\n    componentWillUnmount() {\n        this.props.retryQuiz()\n    }\n\n    render() {\n        return (\n            <div className={classes.Quiz}>\n                <div className={classes.QuizWrapper}>\n                    <h1>Answer the Question !</h1>\n\n                    {\n                        this.props.loading || !this.props.quiz\n                            ? <Loader />\n                            : this.props.isFinished\n                                ? <FinishedQuiz\n                                    results={this.props.results}\n                                    quiz={this.props.quiz}\n                                    onRetry={this.props.retryQuiz}\n                                />\n                                : <ActiveQuiz\n                                    answers={this.props.quiz[this.props.activeQuestion].answers}\n                                    question={this.props.quiz[this.props.activeQuestion].question}\n                                    onAnswerClick={this.props.quizAnswerClick}\n                                    quizLength={this.props.quiz.length}\n                                    answerNumber={this.props.activeQuestion + 1}\n                                    state={this.props.answerState}\n                                />\n                    }\n\n\n                </div>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        results: state.quiz.results,\n        isFinished: state.quiz.isFinished,\n        activeQuestion: state.quiz.activeQuestion,\n        answerState: state.quiz.answerState,\n        quiz: state.quiz.quiz,\n        loading: state.quiz.loading\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        fetchQuizById: id => dispatch(fetchQuizById(id)),\n        quizAnswerClick: answerId => dispatch(quizAnswerClick(answerId)),\n        retryQuiz: () => dispatch(retryQuiz())\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Quiz)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport { logout } from '../../store/actions/auth'\n\n\nclass Logout extends Component {\n    componentDidMount() {\n        this.props.logout()\n    }\n\n    render() {\n        return <Redirect to={'/'} />\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        logout: () => dispatch(logout())\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(Logout)","import React, { Component } from 'react';\nimport Layout from './hoc/Layout/Layout'\nimport { Route, Switch, Redirect, withRouter } from 'react-router-dom'\nimport QuizList from './Containers/QuizList/QuizList'\nimport Auth from './Containers/Auth/Auth'\nimport QuizCreator from './Containers/QuizCreator/QuizCreator'\nimport Quiz from './Containers/Quiz/Quiz'\nimport { connect } from 'react-redux';\nimport Logout from './Components/Logout/Logout'\nimport { autoLogin } from './store/actions/auth'\n\n\n\n\nclass App extends Component {\n\n  componentDidMount() {\n    this.props.autoLogin()\n  }\n\n  render() {\n\n    let routes = (\n      <Switch>\n        <Route path='/auth' component={Auth} />\n        <Route path='/quiz/:id' component={Quiz} />\n        <Route path='/' exact component={QuizList} />\n        <Redirect to='/' />\n      </Switch>\n    )\n\n    if (this.props.isAuthenticated) {\n      routes = (\n        <Switch>\n          <Route path='/quiz-creator' component={QuizCreator} />\n          <Route path='/quiz/:id' component={Quiz} />\n          <Route path='/logout' component={Logout} />\n          <Route path='/' exact component={QuizList} />\n          <Redirect to='/' />\n        </Switch>\n      )\n    }\n\n    return (\n      <Layout>\n        {routes}\n      </Layout>\n    )\n\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    isAuthenticated: !!state.auth.token\n  }\n}\nfunction mapDispatchToProps(dispatch) {\n  return {\n    autoLogin: () => dispatch(autoLogin())\n  }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App))\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\n    FETCH_QUIZES_START,\n    FETCH_QUIZES_SUCCES,\n    FETCH_QUIZES_ERROR,\n    FETCH_QUIZ_SUCCES,\n    QUIZ_SET_STATE,\n    FINISH_QUIZ,\n    QUIZ_NEXT_QUESTION,\n    QUIZ_RETRY\n} from \"../actions/actionTypes\"\n\nconst initialState = {\n    quizes: [],\n    loading: false,\n    error: null,\n    results: {},\n    isFinished: false,\n    activeQuestion: 0,\n    answerState: null,\n    quiz: null\n}\n\nexport default function quizReducer(state = initialState, action) {\n    switch (action.type) {\n        case FETCH_QUIZES_START:\n            return {\n                ...state, loading: true\n            }\n        case FETCH_QUIZES_SUCCES:\n            return {\n                ...state, loading: false, quizes: action.quizes\n            }\n        case FETCH_QUIZES_ERROR:\n            return {\n                ...state, loading: false, error: action.erros\n            }\n        case FETCH_QUIZ_SUCCES:\n            return {\n                ...state, loading: false, quiz: action.quiz\n            }\n        case QUIZ_SET_STATE:\n            return {\n                ...state, answerState: action.answerState, results: action.results\n            }\n        case FINISH_QUIZ:\n            return {\n                ...state, isFinished: true\n            }\n        case QUIZ_NEXT_QUESTION:\n            return {\n                ...state, answerState: null, activeQuestion: action.number\n            }\n        case QUIZ_RETRY:\n            return {\n                ...state,\n                activeQuestion: 0,\n                answerState: null,\n                isFinished: false,\n                results: {}\n            }\n        default:\n            return state\n    }\n}","import { CREATE_QUIZ_QUESTION, RESET_QUIZ_CREATION } from \"../actions/actionTypes\"\n\nconst initialState = {\n    quiz: []\n}\n\n\nexport default function createReducer(state = initialState, action) {\n    switch (action.type) {\n        case CREATE_QUIZ_QUESTION:\n            return {\n                ...state,\n                quiz: [...state.quiz, action.item]\n            }\n        case RESET_QUIZ_CREATION:\n            return {\n                ...state, quiz: []\n            }\n        default:\n            return state\n    }\n}","import { AUTH_SUCCESS, AUTH_LOGOUT } from \"../actions/actionTypes\"\n\nconst initialState = {\n    token: null\n}\n\n\nexport default function authReducer(state = initialState, action) {\n    switch (action.type) {\n        case AUTH_SUCCESS:\n            return {\n                ...state, token: action.token\n            }\n        case AUTH_LOGOUT:\n            return {\n                ...state, token: null\n            }\n        default:\n            return state\n    }\n}","import { combineReducers } from 'redux'\nimport quizReducer from './quiz'\nimport createReducer from './create'\nimport authReducer from './auth'\n\n\n\n\nexport default combineReducers({\n    quiz: quizReducer,\n    create: createReducer,\n    auth: authReducer\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom'\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, compose, applyMiddleware } from 'redux'\nimport { Provider } from 'react-redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport thunk from 'redux-thunk'\n\n\nconst composeEnhancers =\n    typeof window === 'object' &&\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n            // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n        }) : compose;\n\n\nconst store = createStore(\n    rootReducer,\n    composeEnhancers(\n        applyMiddleware(thunk)\n    )\n)\n\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n)\n\nReactDOM.render(app, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}